package StackMenu;


public class employee {

	private int empId;
	private String name;
	private float salary;
	
	public employee()
	{
		empId=5013;
		name="Amit";
		salary=3400.00f;
		//System.out.println("In Constructor");
	}
	public employee(int e,String s,float sal)
	{
		empId=e;
		name=s;
		salary=sal;
		
	}
	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", name=" + name + ", salary=" + salary + "]";
	}
	public int getEmpId() {
		return empId;
	}
	public void setEmpId(int empId) {
		this.empId = empId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public float getSalary() {
		return salary;
	}
	public void setSalary(float salary) {
		this.salary = salary;
	}
	public void display()
	{
		System.out.println(empId+" "+name+" "+salary);
	}
	
	public class Stack 
	{
		private  int[] arr;      //take data members private compulsory in stack
		private int top;

		
		public Stack()
		{
			arr=new int[5];
			top=-1;
		}
		public Stack(int size)
		{
			arr =new int[size];
			top=-1;
		}
		public void push(int value)        //push method
		{
			if(top+1<arr.length)
			{
				++top;
				arr[top]=value;
			}
			else
			{
				System.out.println("stack overflow ! while pushing"+value);
			}
			
		}

	public int pop()                   //pop method
	{
		if(top>-1)
		{
			int value=arr[top];
			--top;
			return value;
		}
		else
		{
			System.out.println("stack underflow...!");
			return -1;	
			}
	}
	public String toString()
	{
		String str="";
		for(int i=top;i>=0;--i)
		{
			str=str+arr[i]+",";	
		}
		return str;
	}
	}
	
	
	
	
	
}
